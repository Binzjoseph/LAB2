---
title: "BSMM-lab-2"
subtitle: "BSMM 8740 Fall 2023"
author: "Binz Joseph"
date: "September 25th 2023"
format: html
editor: visual
self-contained: true
---

## Setup

Load packages and data:

```{r}
library(magrittr)     # the pipe
library(tidyverse)    # for data wrangling + visualization
library(tidymodels)   # for modeling
library(gt)           # for making display tables
library(gtExtras)     # helper functions for beautiful tables
library(DataExplorer) #
```

```{r load-pkg-data}
#| message: false
the_tate <- readr::read_delim("data/the-tate-collection.csv", ";", escape_double = FALSE, trim_ws = TRUE)
the_tate_artists <- readr::read_csv("data/the-tate-artists.csv")
```

## Exercises

### Exercise 1

```{r}
library(dplyr)
glimpse(the_tate_artists)
```

```{r}
the_tate |>
dplyr::summarise(unique=length(unique(artistId)),
                 min_year= min(year,na.rm = TRUE), max_year=max(year,na.rm = TRUE),
                 min_acquisittion= min(acquisitionYear,na.rm = TRUE), max_acqueisiton=max(acquisitionYear,na.rm=TRUE))
```

```{r}
library(DataExplorer)
the_tate |> DataExplorer::introduce() 
```

```{r}
library(DataExplorer)
the_tate |> DataExplorer::plot_missing()
```

The `the_tate` dataset has 3342 unique artists who worked from 1545 to 2012. The works were acquired between the years 1823 and 2013.

### Exercise 2

```{r}
library(dplyr)
library(tidyverse)
library(tibble)
DataExplorer::introduce(the_tate)

```

```{r}
DataExplorer::introduce(the_tate_artists)
```

```{r}
DataExplorer::plot_missing(the_tate)
```

```{r}
DataExplorer::plot_missing(the_tate_artists)
```

```{r}
works_with_missing_year <- sum(is.na(the_tate$year))
print(works_with_missing_year)
```

Â 

```{r}
the_tate|>dplyr::filter(is.na(year))|>dplyr::distinct(artist)
```

```{r}
artists_with_missing_date <- the_tate |>
  filter(is.na(year)) |>
  distinct(artist) |>
  nrow()
print(artists_with_missing_date)
```

```{r}
artist_missing_year_count <- the_tate|>dplyr::filter(is.na(year)) |> 
  group_by(artist) |>
  summarise(missing_year = sum(is.na(year))) |> 
  arrange(desc(missing_year)) |> #Arrange the results in descending order of missing 'year' counts#
  as_tibble()

print(artist_missing_year_count)
```

```{r}
artists_with_missing_year <- nrow(artist_missing_year_count)

print(artists_with_missing_year)
```

```{r}
artist_missing_year_count <- artist_missing_year_count |> # Calculate the percentage of missing 'year' values for each artist #
  mutate(percentage = (missing_year / works_with_missing_year) * 100)

artist_missing_year_count <- artist_missing_year_count |>
  mutate(cumulative_percentage = cumsum(percentage)) # Calculate the cumulative percentage of missing 'year' values # 

artists_to_resolve_50_percent <- min(which(artist_missing_year_count$cumulative_percentage >= 50))

print(artists_to_resolve_50_percent)

```

How number of works with missing dates is 5397

The number of artists whose works have missing dates is 461.

It would require resolving missing year data for only 11 artists resolve resolve at least 50% of the missing data.

The missing year data likely to be classified as MAR.

### Exercise 3

```{r}
artist_work_counts <- the_tate |>
  group_by(artist) |>
  summarize(title = n()) |>
  arrange(desc(title))
```

```{r}
top_10_artists <- artist_work_counts |>
  slice_head(n = 10)
print(artist_work_counts)
print(top_10_artists)
```

The artist with the most works in the Tate collection is Turner, Joseph Mallord William

The artist with the tenth-most works in the Tate collection is Warhol, Andy.

### Exercise 4

```{r}
library(dplyr)
library(gt)
library(gtExtras)
```

```{r}
total_works <- nrow(the_tate)
artist_work_counts |>mutate(percentage=(title/total_works)*100)
print(artist_work_counts)
```

```{r}
table <- artist_work_counts |>
  gt() |>
  fmt_number(
    columns = c(title, percentage), # Format both title and percentage columns
    decimals = 2 # No decimal places for title, and decimals for percentage
  ) |>
  print(table)
```

The artist with the greatest number of works in the Tate collection represent 56.9% of the total number of works

### Exercise 5

```{r}
total_rows <- total_works

# Select only the columns for artist and title to count distinct combinations #
distinct_artist_title_pair <- the_tate |> select(artist,title) |> distinct()

distinct_count <- nrow(distinct_artist_title_pair)

print(total_rows)
```

```{r}
print(distinct_count)
```

```{r}
duplicated_count <- total_rows - distinct_count
print(duplicated_count)
```

There are 23705 duplicate artist-title pairs

### Exercise 6

```{r}
library(tidyr) # Load tidyverse library 

the_tate <- the_tate |>
  mutate(area_cmsquare= width * height)

selected_artworks <- the_tate |>
  select(artist, title, area_cmsquare) |>
  drop_na() # Remove rows with containing NA values#

ordered_artworks <- selected_artworks |>
  arrange(area_cmsquare)

# Remove largest artwork in the collection #
largest_artwork <- ordered_artworks |>
  slice_tail(n = 1)

# Remove smallest artwork in the collection #
smallest_artwork <- ordered_artworks |>
  slice_head(n = 1)
# Print both the smallest and largest artwork details #
print(largest_artwork)
```

```{r}
print(smallest_artwork)
```

The artist with the largest work in the tate collection is Therrien, Robert.

The artist with the smallest work in the collection is Mesens, E.L.T. The smallest work has area 237 $\text{cm}^2$

### Exercise 7

```{r}
library(dplyr)

# Left join to group the tables and slice the result by gender criteria #
gender_grouped<- the_tate |>
  dplyr::left_join(the_tate_artists, by = c("artist" = "name")) |>   tidyr::drop_na(gender) |> group_by(gender)
```

```{r}
print(gender_grouped)
```

### Exercise 8

```{r}
library(dplyr)
library(readr)

data <- read_csv("data/SPX_HistoricalData_1692322132002.csv") 
```

```{r}
print(data)
```

```{r}
data <- data |> # Add a column for the year of transaction #
  mutate(Year = lubridate::year(as.Date(Date, format = "%m/%d/%Y")))

data<- data |>
rename("close"=`Close/Last`)

data <- data |>
  mutate(rd = log(lead(close) / close))

data<- data |>
  mutate(vard = rd^2)


summary_data <- data |> #summarise the data to group by year #
  group_by(Year) |>
  summarize(
    Annual_Return = (exp(sum(rd, na.rm = TRUE)) - 1)*100, 
    Annual_StdDev = sqrt(sum(vard, na.rm = TRUE))*100,
    .groups = "drop"  # Drop grouping after summary
  )

# Print the summary data
print(summary_data)
```

The annual return in the SPX price in 2020 was -13.98%.

The corresponding price volatility was 34.70%.

### Exercise 9

```{r}
library(dplyr)
library(readr)


period_return <- prod(1 + summary_data$Annual_Return) - 1
period_volatility <- sqrt(sum(summary_data$Annual_StdDev^2))


summary_rows <- tibble::tibble(
  Year = as.character("Period"),
  Annual_Return = period_return,
  Annual_StdDev = period_volatility
)

summary_data <- summary_data |>
  mutate(Year = as.character(Year))
summary_data <- bind_rows(summary_data, summary_rows)
print(summary_data)
```

The period volatility was 48.77%

### 
